<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Fragement.Binary_Trees">


    <!-- TODO: Update blank fragment layout -->
    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:layout_editor_absoluteX="167dp"

        tools:layout_editor_absoluteY="16dp">

        <LinearLayout
            xmlns:app="http://schemas.android.com/apk/res-auto"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginTop="20dp"
                android:textColor="#0336FF"
                android:textSize="24sp"
                android:textStyle="bold"
                android:text="Introduction"/>

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textColor="#000000"
                android:layout_marginTop="15dp"
                android:layout_marginLeft="15dp"
                android:layout_marginRight="15dp"
                android:text="Binary Tree is a special data structure used for data storage purposes. A binary tree has a special condition that each node can have a maximum of two children. A binary tree has the benefits of both an ordered array and a linked list as search is as quick as in a sorted array and insertion or deletion operation are as fast as in linked list."/>


            <ImageView
                android:id="@+id/androidparty"
                android:layout_width="wrap_content"
                android:layout_height="200dp"
                android:layout_marginTop="20dp"
                android:layout_marginBottom="10dp"
                android:layout_gravity="center"
                android:src="@drawable/binary_tree" />

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginBottom="20dp"
                android:layout_marginTop="20dp"
                android:textColor="#0336FF"
                android:text="Common Terminologies"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textColor="#000000"
                android:layout_marginTop="15dp"
                android:layout_marginLeft="15dp"
                android:layout_marginRight="15dp"
                android:text="Root: Topmost node in a tree.\nParent: Every node (excluding a root) in a tree is connected by a directed edge from exactly one other node. This node is called a parent.
    \nChild: A node directly connected to another node when moving away from the root.\nLeaf/External node: Node with no children.\nInternal node: Node with atleast one children.\nDepth of a node: Number of edges from root to the node.\nHeight of a node: Number of edges from the node to the deepest leaf. Height of the tree is the height of the root.
Binary Trees"/>

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginBottom="20dp"
                android:layout_marginTop="20dp"
                android:textColor="#0336FF"
                android:text="Advantages Of Binary trees"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textColor="#000000"
                android:layout_marginTop="15dp"
                android:layout_marginLeft="15dp"
                android:layout_marginRight="15dp"
                android:text="Trees are so useful and frequently used, because they have some very serious advantages:
    Trees reflect structural relationships in the data.
    Trees are used to represent hierarchies.
    Trees provide an efficient insertion and searching.
    Trees are very flexible data, allowing to move subtrees around with minumum effort.

"/>

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginBottom="20dp"
                android:layout_marginTop="20dp"
                android:textColor="#0336FF"
                android:text="Videos"
                android:textSize="24sp"
                android:textStyle="bold" />



            <com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView
                android:id="@+id/youtube_player_view"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="30dp"
                app:videoId="H5JubkIy_p8"
                app:autoPlay="false"
                app:showFullScreenButton="true" />

        </LinearLayout>

    </ScrollView>

</FrameLayout>